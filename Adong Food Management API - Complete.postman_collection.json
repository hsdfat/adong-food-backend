{
	"info": {
		"_postman_id": "021962f7-7a19-4c87-95d0-45477286566e",
		"name": "Adong Food Management API - Complete",
		"description": "Complete API collection for Adong Food Management System with authentication, pagination, search, and sorting capabilities",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16908025"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Save access token",
									"    if (jsonData.token) {",
									"        pm.collectionVariables.set('access_token', jsonData.token);",
									"        console.log('Access token saved:', jsonData.token);",
									"    }",
									"    ",
									"    // Save refresh token",
									"    if (jsonData.refresh_token) {",
									"        pm.collectionVariables.set('refresh_token', jsonData.refresh_token);",
									"        console.log('Refresh token saved');",
									"    }",
									"    ",
									"    // Save expire time if available",
									"    if (jsonData.expire) {",
									"        pm.collectionVariables.set('token_expire', jsonData.expire);",
									"    }",
									"    ",
									"    pm.test('Login successful', function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"    ",
									"    pm.test('Token received', function () {",
									"        pm.expect(jsonData.token).to.be.a('string');",
									"    });",
									"} else {",
									"    pm.test('Login failed', function () {",
									"        pm.response.to.have.status(401);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    // Update access token",
									"    if (jsonData.token) {",
									"        pm.collectionVariables.set('access_token', jsonData.token);",
									"        console.log('Access token refreshed');",
									"    }",
									"    ",
									"    // Update expire time if available",
									"    if (jsonData.expire) {",
									"        pm.collectionVariables.set('token_expire', jsonData.expire);",
									"    }",
									"    ",
									"    pm.test('Token refresh successful', function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refresh_token}}\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/refresh",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"refresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    // Clear tokens on successful logout",
									"    pm.collectionVariables.set('access_token', '');",
									"    console.log('Tokens cleared after logout');",
									"    ",
									"    pm.test('Logout successful', function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout All Sessions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    // Clear all tokens",
									"    pm.collectionVariables.set('access_token', '');",
									"    pm.collectionVariables.set('refresh_token', '');",
									"    console.log('All tokens cleared');",
									"    ",
									"    pm.test('Logout all sessions successful', function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/logout-all",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"logout-all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Sessions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/sessions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"sessions"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ingredients",
			"item": [
				{
					"name": "Get All Ingredients",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/ingredients?page=1&pageSize=20&search=&sortBy=nguyenlieuId&sortDir=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ingredients"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (default: 1)"
								},
								{
									"key": "pageSize",
									"value": "20",
									"description": "Items per page (default: 10)"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search term (searches in nguyenlieuId, tennguyenlieu, nhomvatlieu)"
								},
								{
									"key": "sortBy",
									"value": "nguyenlieuId",
									"description": "Sort field (nguyenlieuId, tennguyenlieu, nhomvatlieu, donvi)"
								},
								{
									"key": "sortDir",
									"value": "asc",
									"description": "Sort direction (asc, desc)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Ingredient by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/ingredients/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ingredients",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "NVL001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Ingredient",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nguyenlieuId\": \"NVL001\",\n    \"tennguyenlieu\": \"Thịt heo\",\n    \"tinhchat\": \"Tươi sống\",\n    \"nhomvatlieu\": \"Thịt\",\n    \"donvi\": \"kg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ingredients",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ingredients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Ingredient",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tennguyenlieu\": \"Thịt heo ba chỉ\",\n    \"tinhchat\": \"Tươi sống\",\n    \"nhomvatlieu\": \"Thịt\",\n    \"donvi\": \"kg\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/ingredients/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ingredients",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "NVL001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Ingredient",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/ingredients/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"ingredients",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "NVL001"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Kitchens",
			"item": [
				{
					"name": "Get All Kitchens",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/kitchens?page=1&pageSize=20&search=&sortBy=bepId&sortDir=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kitchens"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in bepId, tenbep"
								},
								{
									"key": "sortBy",
									"value": "bepId",
									"description": "Sort by: bepId, tenbep, diachi"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Kitchen by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/kitchens/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kitchens",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "BEP001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Kitchen",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bepId\": \"BEP001\",\n    \"tenbep\": \"Bếp Trung Tâm\",\n    \"diachi\": \"123 Đường ABC, Quận 1, TP.HCM\",\n    \"sodienthoai\": \"0901234567\",\n    \"nguoiquanly\": \"Nguyễn Văn A\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/kitchens",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kitchens"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Kitchen",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tenbep\": \"Bếp Trung Tâm - Cơ sở 1\",\n    \"diachi\": \"123 Đường ABC, Quận 1, TP.HCM\",\n    \"sodienthoai\": \"0901234567\",\n    \"nguoiquanly\": \"Nguyễn Văn B\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/kitchens/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kitchens",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "BEP001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Kitchen",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/kitchens/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"kitchens",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "BEP001"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users?page=1&pageSize=20&search=&sortBy=userid&sortDir=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in userid, hoten, email"
								},
								{
									"key": "sortBy",
									"value": "userid",
									"description": "Sort by: userid, hoten, email, role"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "admin"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userid\": \"user001\",\n    \"hoten\": \"Nguyễn Văn A\",\n    \"email\": \"nguyenvana@example.com\",\n    \"password\": \"password123\",\n    \"role\": \"user\",\n    \"sodienthoai\": \"0901234567\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"hoten\": \"Nguyễn Văn A - Updated\",\n    \"email\": \"nguyenvana.updated@example.com\",\n    \"role\": \"admin\",\n    \"sodienthoai\": \"0901234568\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "user001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "user001"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dishes",
			"item": [
				{
					"name": "Get All Dishes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/dishes?page=1&pageSize=20&search=&sortBy=monanid&sortDir=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"dishes"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in tenmonan, monanid, mota"
								},
								{
									"key": "sortBy",
									"value": "monanid",
									"description": "Sort by: monanid, tenmonan, loaimonan, dongia"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Dish by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/dishes/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"dishes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "MON001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Dish",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"monanid\": \"MON001\",\n    \"tenmonan\": \"Cơm tấm sườn bì chả\",\n    \"loaimonan\": \"Cơm\",\n    \"mota\": \"Cơm tấm với sườn nướng, bì và chả\",\n    \"dongia\": 45000,\n    \"trangthai\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/dishes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Dish",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tenmonan\": \"Cơm tấm sườn bì chả đặc biệt\",\n    \"loaimonan\": \"Cơm\",\n    \"mota\": \"Cơm tấm với sườn nướng, bì và chả - Phần ăn lớn hơn\",\n    \"dongia\": 55000,\n    \"trangthai\": \"active\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/dishes/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"dishes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "MON001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Dish",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/dishes/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"dishes",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "MON001"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Suppliers",
			"item": [
				{
					"name": "Get All Suppliers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/suppliers?page=1&pageSize=20&search=&sortBy=nhacungcapId&sortDir=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"suppliers"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in nhacungcapId, tennhacungcap, diachi"
								},
								{
									"key": "sortBy",
									"value": "nhacungcapId",
									"description": "Sort by: nhacungcapId, tennhacungcap, diachi"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Supplier by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/suppliers/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"suppliers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "NCC001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Supplier",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"nhacungcapId\": \"NCC001\",\n    \"tennhacungcap\": \"Công ty TNHH Thực phẩm ABC\",\n    \"diachi\": \"456 Đường XYZ, Quận 3, TP.HCM\",\n    \"sodienthoai\": \"0287654321\",\n    \"email\": \"contact@abc-food.com\",\n    \"nguoilienhe\": \"Trần Văn B\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/suppliers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"suppliers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Supplier",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tennhacungcap\": \"Công ty TNHH Thực phẩm ABC - Chi nhánh HCM\",\n    \"diachi\": \"456 Đường XYZ, Quận 3, TP.HCM\",\n    \"sodienthoai\": \"0287654321\",\n    \"email\": \"hcm@abc-food.com\",\n    \"nguoilienhe\": \"Trần Văn C\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/suppliers/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"suppliers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "NCC001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Supplier",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/suppliers/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"suppliers",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "NCC001"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Recipe Standards",
			"item": [
				{
					"name": "Get All Recipe Standards",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recipe-standards?page=1&pageSize=20&search=&sortBy=id&sortDir=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recipe-standards"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in dishId, ingredientId"
								},
								{
									"key": "sortBy",
									"value": "id",
									"description": "Sort by: id, dishId, ingredientId, standardPer1"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Recipe Standard by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recipe-standards/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recipe-standards",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Recipe Standards by Dish",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recipe-standards/dish/:dishId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recipe-standards",
								"dish",
								":dishId"
							],
							"variable": [
								{
									"key": "dishId",
									"value": "MON001"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Recipe Standard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dishId\": \"MON001\",\n    \"ingredientId\": \"NVL001\",\n    \"unit\": \"kg\",\n    \"standardPer1\": 0.5,\n    \"note\": \"Thịt ba chỉ cho 1 suất\",\n    \"amount\": 50000,\n    \"updatedById\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/recipe-standards",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recipe-standards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Recipe Standard",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"standardPer1\": 0.6,\n    \"note\": \"Tăng định mức thịt cho 1 suất\",\n    \"amount\": 60000,\n    \"updatedById\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/recipe-standards/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recipe-standards",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Recipe Standard",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/recipe-standards/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"recipe-standards",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Supplier Prices",
			"item": [
				{
					"name": "Get All Supplier Prices",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/supplier-prices?page=1&pageSize=20&search=&sortBy=id&sortDir=asc",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"supplier-prices"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search in productName, ingredientId, supplierId"
								},
								{
									"key": "sortBy",
									"value": "id",
									"description": "Sort by: id, productName, supplierId, unitPrice"
								},
								{
									"key": "sortDir",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Supplier Price by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/supplier-prices/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"supplier-prices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Supplier Price",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"productName\": \"Thịt heo ba chỉ loại 1\",\n    \"ingredientId\": \"NVL001\",\n    \"category\": \"Thịt tươi\",\n    \"supplierId\": \"NCC001\",\n    \"manufacturer\": \"Vissan\",\n    \"unit\": \"kg\",\n    \"specification\": \"1kg/túi\",\n    \"unitPrice\": 120000,\n    \"pricePer1\": 120000,\n    \"effectiveFrom\": \"2025-01-01T00:00:00Z\",\n    \"effectiveTo\": \"2025-12-31T23:59:59Z\",\n    \"active\": true,\n    \"newPrice\": 0,\n    \"promotion\": \"\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/supplier-prices",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"supplier-prices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Supplier Price",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"unitPrice\": 125000,\n    \"pricePer1\": 125000,\n    \"newPrice\": 125000,\n    \"promotion\": \"Y\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/supplier-prices/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"supplier-prices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Supplier Price",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/supplier-prices/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"supplier-prices",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Health Check",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:18080",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "token_expire",
			"value": "",
			"type": "string"
		}
	]
}